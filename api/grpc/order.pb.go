// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.12.4
// source: api/grpc/order.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enums
type OrderType int32

const (
	OrderType_LIMIT     OrderType = 0
	OrderType_MARKET    OrderType = 1
	OrderType_IOC       OrderType = 2 // Immediate-or-Cancel
	OrderType_FOK       OrderType = 3 // Fill-or-Kill
	OrderType_POST_ONLY OrderType = 4
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "LIMIT",
		1: "MARKET",
		2: "IOC",
		3: "FOK",
		4: "POST_ONLY",
	}
	OrderType_value = map[string]int32{
		"LIMIT":     0,
		"MARKET":    1,
		"IOC":       2,
		"FOK":       3,
		"POST_ONLY": 4,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_order_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_api_grpc_order_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{0}
}

type OrderSide int32

const (
	OrderSide_BUY  OrderSide = 0
	OrderSide_SELL OrderSide = 1
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "BUY",
		1: "SELL",
	}
	OrderSide_value = map[string]int32{
		"BUY":  0,
		"SELL": 1,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_order_proto_enumTypes[1].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_api_grpc_order_proto_enumTypes[1]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{1}
}

type OrderStatus int32

const (
	OrderStatus_PENDING          OrderStatus = 0
	OrderStatus_FILLED           OrderStatus = 1
	OrderStatus_PARTIALLY_FILLED OrderStatus = 2
	OrderStatus_CANCELLED        OrderStatus = 3
	OrderStatus_REJECTED         OrderStatus = 4
)

// Enum value maps for OrderStatus.
var (
	OrderStatus_name = map[int32]string{
		0: "PENDING",
		1: "FILLED",
		2: "PARTIALLY_FILLED",
		3: "CANCELLED",
		4: "REJECTED",
	}
	OrderStatus_value = map[string]int32{
		"PENDING":          0,
		"FILLED":           1,
		"PARTIALLY_FILLED": 2,
		"CANCELLED":        3,
		"REJECTED":         4,
	}
)

func (x OrderStatus) Enum() *OrderStatus {
	p := new(OrderStatus)
	*p = x
	return p
}

func (x OrderStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_order_proto_enumTypes[2].Descriptor()
}

func (OrderStatus) Type() protoreflect.EnumType {
	return &file_api_grpc_order_proto_enumTypes[2]
}

func (x OrderStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderStatus.Descriptor instead.
func (OrderStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{2}
}

type MarketDataType int32

const (
	MarketDataType_TRADE             MarketDataType = 0
	MarketDataType_ORDER_BOOK_UPDATE MarketDataType = 1
	MarketDataType_HEARTBEAT         MarketDataType = 2
)

// Enum value maps for MarketDataType.
var (
	MarketDataType_name = map[int32]string{
		0: "TRADE",
		1: "ORDER_BOOK_UPDATE",
		2: "HEARTBEAT",
	}
	MarketDataType_value = map[string]int32{
		"TRADE":             0,
		"ORDER_BOOK_UPDATE": 1,
		"HEARTBEAT":         2,
	}
)

func (x MarketDataType) Enum() *MarketDataType {
	p := new(MarketDataType)
	*p = x
	return p
}

func (x MarketDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarketDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_grpc_order_proto_enumTypes[3].Descriptor()
}

func (MarketDataType) Type() protoreflect.EnumType {
	return &file_api_grpc_order_proto_enumTypes[3]
}

func (x MarketDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarketDataType.Descriptor instead.
func (MarketDataType) EnumDescriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{3}
}

// Order messages
type OrderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       uint64                 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	ClientOrderId string                 `protobuf:"bytes,2,opt,name=client_order_id,json=clientOrderId,proto3" json:"client_order_id,omitempty"`
	Price         float64                `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      float64                `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	OrderType     OrderType              `protobuf:"varint,5,opt,name=order_type,json=orderType,proto3,enum=aeromatch.OrderType" json:"order_type,omitempty"`
	Side          OrderSide              `protobuf:"varint,6,opt,name=side,proto3,enum=aeromatch.OrderSide" json:"side,omitempty"`
	Instrument    string                 `protobuf:"bytes,7,opt,name=instrument,proto3" json:"instrument,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	mi := &file_api_grpc_order_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{0}
}

func (x *OrderRequest) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderRequest) GetClientOrderId() string {
	if x != nil {
		return x.ClientOrderId
	}
	return ""
}

func (x *OrderRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderRequest) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderRequest) GetOrderType() OrderType {
	if x != nil {
		return x.OrderType
	}
	return OrderType_LIMIT
}

func (x *OrderRequest) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_BUY
}

func (x *OrderRequest) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

type OrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       uint64                 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Status        OrderStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=aeromatch.OrderStatus" json:"status,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	mi := &file_api_grpc_order_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{1}
}

func (x *OrderResponse) GetOrderId() uint64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderResponse) GetStatus() OrderStatus {
	if x != nil {
		return x.Status
	}
	return OrderStatus_PENDING
}

func (x *OrderResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *OrderResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Order book messages
type OrderBookRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instrument    string                 `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Depth         uint32                 `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"` // Number of price levels to return
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookRequest) Reset() {
	*x = OrderBookRequest{}
	mi := &file_api_grpc_order_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookRequest) ProtoMessage() {}

func (x *OrderBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookRequest.ProtoReflect.Descriptor instead.
func (*OrderBookRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{2}
}

func (x *OrderBookRequest) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *OrderBookRequest) GetDepth() uint32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type OrderBookResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instrument    string                 `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Bids          []*PriceLevel          `protobuf:"bytes,3,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks          []*PriceLevel          `protobuf:"bytes,4,rep,name=asks,proto3" json:"asks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookResponse) Reset() {
	*x = OrderBookResponse{}
	mi := &file_api_grpc_order_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookResponse) ProtoMessage() {}

func (x *OrderBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookResponse.ProtoReflect.Descriptor instead.
func (*OrderBookResponse) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{3}
}

func (x *OrderBookResponse) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *OrderBookResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *OrderBookResponse) GetBids() []*PriceLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBookResponse) GetAsks() []*PriceLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

type PriceLevel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Price         float64                `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      float64                `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	OrderCount    uint32                 `protobuf:"varint,3,opt,name=order_count,json=orderCount,proto3" json:"order_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PriceLevel) Reset() {
	*x = PriceLevel{}
	mi := &file_api_grpc_order_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PriceLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceLevel) ProtoMessage() {}

func (x *PriceLevel) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceLevel.ProtoReflect.Descriptor instead.
func (*PriceLevel) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{4}
}

func (x *PriceLevel) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PriceLevel) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PriceLevel) GetOrderCount() uint32 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

// Market data messages
type MarketDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Instrument    string                 `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketDataRequest) Reset() {
	*x = MarketDataRequest{}
	mi := &file_api_grpc_order_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataRequest) ProtoMessage() {}

func (x *MarketDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataRequest.ProtoReflect.Descriptor instead.
func (*MarketDataRequest) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{5}
}

func (x *MarketDataRequest) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

type MarketDataUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MarketDataType         `protobuf:"varint,1,opt,name=type,proto3,enum=aeromatch.MarketDataType" json:"type,omitempty"`
	Trade         *Trade                 `protobuf:"bytes,2,opt,name=trade,proto3" json:"trade,omitempty"`
	Orderbook     *OrderBookUpdate       `protobuf:"bytes,3,opt,name=orderbook,proto3" json:"orderbook,omitempty"`
	Timestamp     int64                  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarketDataUpdate) Reset() {
	*x = MarketDataUpdate{}
	mi := &file_api_grpc_order_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarketDataUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketDataUpdate) ProtoMessage() {}

func (x *MarketDataUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketDataUpdate.ProtoReflect.Descriptor instead.
func (*MarketDataUpdate) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{6}
}

func (x *MarketDataUpdate) GetType() MarketDataType {
	if x != nil {
		return x.Type
	}
	return MarketDataType_TRADE
}

func (x *MarketDataUpdate) GetTrade() *Trade {
	if x != nil {
		return x.Trade
	}
	return nil
}

func (x *MarketDataUpdate) GetOrderbook() *OrderBookUpdate {
	if x != nil {
		return x.Orderbook
	}
	return nil
}

func (x *MarketDataUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type OrderBookUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Bids          []*PriceLevel          `protobuf:"bytes,1,rep,name=bids,proto3" json:"bids,omitempty"`
	Asks          []*PriceLevel          `protobuf:"bytes,2,rep,name=asks,proto3" json:"asks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrderBookUpdate) Reset() {
	*x = OrderBookUpdate{}
	mi := &file_api_grpc_order_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderBookUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookUpdate) ProtoMessage() {}

func (x *OrderBookUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookUpdate.ProtoReflect.Descriptor instead.
func (*OrderBookUpdate) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{7}
}

func (x *OrderBookUpdate) GetBids() []*PriceLevel {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBookUpdate) GetAsks() []*PriceLevel {
	if x != nil {
		return x.Asks
	}
	return nil
}

type Trade struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TradeId       uint64                 `protobuf:"varint,1,opt,name=trade_id,json=tradeId,proto3" json:"trade_id,omitempty"`
	ExecutionId   uint64                 `protobuf:"varint,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Price         float64                `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity      float64                `protobuf:"fixed64,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MakerOrderId  uint64                 `protobuf:"varint,6,opt,name=maker_order_id,json=makerOrderId,proto3" json:"maker_order_id,omitempty"`
	TakerOrderId  uint64                 `protobuf:"varint,7,opt,name=taker_order_id,json=takerOrderId,proto3" json:"taker_order_id,omitempty"`
	Instrument    string                 `protobuf:"bytes,8,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Side          OrderSide              `protobuf:"varint,9,opt,name=side,proto3,enum=aeromatch.OrderSide" json:"side,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Trade) Reset() {
	*x = Trade{}
	mi := &file_api_grpc_order_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_api_grpc_order_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_api_grpc_order_proto_rawDescGZIP(), []int{8}
}

func (x *Trade) GetTradeId() uint64 {
	if x != nil {
		return x.TradeId
	}
	return 0
}

func (x *Trade) GetExecutionId() uint64 {
	if x != nil {
		return x.ExecutionId
	}
	return 0
}

func (x *Trade) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Trade) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Trade) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Trade) GetMakerOrderId() uint64 {
	if x != nil {
		return x.MakerOrderId
	}
	return 0
}

func (x *Trade) GetTakerOrderId() uint64 {
	if x != nil {
		return x.TakerOrderId
	}
	return 0
}

func (x *Trade) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *Trade) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_BUY
}

var File_api_grpc_order_proto protoreflect.FileDescriptor

const file_api_grpc_order_proto_rawDesc = "" +
	"\n" +
	"\x14api/grpc/order.proto\x12\taeromatch\"\x82\x02\n" +
	"\fOrderRequest\x12\x19\n" +
	"\border_id\x18\x01 \x01(\x04R\aorderId\x12&\n" +
	"\x0fclient_order_id\x18\x02 \x01(\tR\rclientOrderId\x12\x14\n" +
	"\x05price\x18\x03 \x01(\x01R\x05price\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x01R\bquantity\x123\n" +
	"\n" +
	"order_type\x18\x05 \x01(\x0e2\x14.aeromatch.OrderTypeR\torderType\x12(\n" +
	"\x04side\x18\x06 \x01(\x0e2\x14.aeromatch.OrderSideR\x04side\x12\x1e\n" +
	"\n" +
	"instrument\x18\a \x01(\tR\n" +
	"instrument\"\x8e\x01\n" +
	"\rOrderResponse\x12\x19\n" +
	"\border_id\x18\x01 \x01(\x04R\aorderId\x12.\n" +
	"\x06status\x18\x02 \x01(\x0e2\x16.aeromatch.OrderStatusR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"H\n" +
	"\x10OrderBookRequest\x12\x1e\n" +
	"\n" +
	"instrument\x18\x01 \x01(\tR\n" +
	"instrument\x12\x14\n" +
	"\x05depth\x18\x02 \x01(\rR\x05depth\"\xa7\x01\n" +
	"\x11OrderBookResponse\x12\x1e\n" +
	"\n" +
	"instrument\x18\x01 \x01(\tR\n" +
	"instrument\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12)\n" +
	"\x04bids\x18\x03 \x03(\v2\x15.aeromatch.PriceLevelR\x04bids\x12)\n" +
	"\x04asks\x18\x04 \x03(\v2\x15.aeromatch.PriceLevelR\x04asks\"_\n" +
	"\n" +
	"PriceLevel\x12\x14\n" +
	"\x05price\x18\x01 \x01(\x01R\x05price\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x01R\bquantity\x12\x1f\n" +
	"\vorder_count\x18\x03 \x01(\rR\n" +
	"orderCount\"3\n" +
	"\x11MarketDataRequest\x12\x1e\n" +
	"\n" +
	"instrument\x18\x01 \x01(\tR\n" +
	"instrument\"\xc1\x01\n" +
	"\x10MarketDataUpdate\x12-\n" +
	"\x04type\x18\x01 \x01(\x0e2\x19.aeromatch.MarketDataTypeR\x04type\x12&\n" +
	"\x05trade\x18\x02 \x01(\v2\x10.aeromatch.TradeR\x05trade\x128\n" +
	"\torderbook\x18\x03 \x01(\v2\x1a.aeromatch.OrderBookUpdateR\torderbook\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\"g\n" +
	"\x0fOrderBookUpdate\x12)\n" +
	"\x04bids\x18\x01 \x03(\v2\x15.aeromatch.PriceLevelR\x04bids\x12)\n" +
	"\x04asks\x18\x02 \x03(\v2\x15.aeromatch.PriceLevelR\x04asks\"\xab\x02\n" +
	"\x05Trade\x12\x19\n" +
	"\btrade_id\x18\x01 \x01(\x04R\atradeId\x12!\n" +
	"\fexecution_id\x18\x02 \x01(\x04R\vexecutionId\x12\x14\n" +
	"\x05price\x18\x03 \x01(\x01R\x05price\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\x01R\bquantity\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12$\n" +
	"\x0emaker_order_id\x18\x06 \x01(\x04R\fmakerOrderId\x12$\n" +
	"\x0etaker_order_id\x18\a \x01(\x04R\ftakerOrderId\x12\x1e\n" +
	"\n" +
	"instrument\x18\b \x01(\tR\n" +
	"instrument\x12(\n" +
	"\x04side\x18\t \x01(\x0e2\x14.aeromatch.OrderSideR\x04side*C\n" +
	"\tOrderType\x12\t\n" +
	"\x05LIMIT\x10\x00\x12\n" +
	"\n" +
	"\x06MARKET\x10\x01\x12\a\n" +
	"\x03IOC\x10\x02\x12\a\n" +
	"\x03FOK\x10\x03\x12\r\n" +
	"\tPOST_ONLY\x10\x04*\x1e\n" +
	"\tOrderSide\x12\a\n" +
	"\x03BUY\x10\x00\x12\b\n" +
	"\x04SELL\x10\x01*Y\n" +
	"\vOrderStatus\x12\v\n" +
	"\aPENDING\x10\x00\x12\n" +
	"\n" +
	"\x06FILLED\x10\x01\x12\x14\n" +
	"\x10PARTIALLY_FILLED\x10\x02\x12\r\n" +
	"\tCANCELLED\x10\x03\x12\f\n" +
	"\bREJECTED\x10\x04*A\n" +
	"\x0eMarketDataType\x12\t\n" +
	"\x05TRADE\x10\x00\x12\x15\n" +
	"\x11ORDER_BOOK_UPDATE\x10\x01\x12\r\n" +
	"\tHEARTBEAT\x10\x022\xbb\x02\n" +
	"\aTrading\x12B\n" +
	"\vSubmitOrder\x12\x17.aeromatch.OrderRequest\x1a\x18.aeromatch.OrderResponse\"\x00\x12L\n" +
	"\x11SubmitOrderStream\x12\x17.aeromatch.OrderRequest\x1a\x18.aeromatch.OrderResponse\"\x00(\x010\x01\x12K\n" +
	"\fGetOrderBook\x12\x1b.aeromatch.OrderBookRequest\x1a\x1c.aeromatch.OrderBookResponse\"\x00\x12Q\n" +
	"\x10MarketDataStream\x12\x1c.aeromatch.MarketDataRequest\x1a\x1b.aeromatch.MarketDataUpdate\"\x000\x01B\x1fZ\x1dgithub.com/aeromatch/api/grpcb\x06proto3"

var (
	file_api_grpc_order_proto_rawDescOnce sync.Once
	file_api_grpc_order_proto_rawDescData []byte
)

func file_api_grpc_order_proto_rawDescGZIP() []byte {
	file_api_grpc_order_proto_rawDescOnce.Do(func() {
		file_api_grpc_order_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_grpc_order_proto_rawDesc), len(file_api_grpc_order_proto_rawDesc)))
	})
	return file_api_grpc_order_proto_rawDescData
}

var file_api_grpc_order_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_grpc_order_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_grpc_order_proto_goTypes = []any{
	(OrderType)(0),            // 0: aeromatch.OrderType
	(OrderSide)(0),            // 1: aeromatch.OrderSide
	(OrderStatus)(0),          // 2: aeromatch.OrderStatus
	(MarketDataType)(0),       // 3: aeromatch.MarketDataType
	(*OrderRequest)(nil),      // 4: aeromatch.OrderRequest
	(*OrderResponse)(nil),     // 5: aeromatch.OrderResponse
	(*OrderBookRequest)(nil),  // 6: aeromatch.OrderBookRequest
	(*OrderBookResponse)(nil), // 7: aeromatch.OrderBookResponse
	(*PriceLevel)(nil),        // 8: aeromatch.PriceLevel
	(*MarketDataRequest)(nil), // 9: aeromatch.MarketDataRequest
	(*MarketDataUpdate)(nil),  // 10: aeromatch.MarketDataUpdate
	(*OrderBookUpdate)(nil),   // 11: aeromatch.OrderBookUpdate
	(*Trade)(nil),             // 12: aeromatch.Trade
}
var file_api_grpc_order_proto_depIdxs = []int32{
	0,  // 0: aeromatch.OrderRequest.order_type:type_name -> aeromatch.OrderType
	1,  // 1: aeromatch.OrderRequest.side:type_name -> aeromatch.OrderSide
	2,  // 2: aeromatch.OrderResponse.status:type_name -> aeromatch.OrderStatus
	8,  // 3: aeromatch.OrderBookResponse.bids:type_name -> aeromatch.PriceLevel
	8,  // 4: aeromatch.OrderBookResponse.asks:type_name -> aeromatch.PriceLevel
	3,  // 5: aeromatch.MarketDataUpdate.type:type_name -> aeromatch.MarketDataType
	12, // 6: aeromatch.MarketDataUpdate.trade:type_name -> aeromatch.Trade
	11, // 7: aeromatch.MarketDataUpdate.orderbook:type_name -> aeromatch.OrderBookUpdate
	8,  // 8: aeromatch.OrderBookUpdate.bids:type_name -> aeromatch.PriceLevel
	8,  // 9: aeromatch.OrderBookUpdate.asks:type_name -> aeromatch.PriceLevel
	1,  // 10: aeromatch.Trade.side:type_name -> aeromatch.OrderSide
	4,  // 11: aeromatch.Trading.SubmitOrder:input_type -> aeromatch.OrderRequest
	4,  // 12: aeromatch.Trading.SubmitOrderStream:input_type -> aeromatch.OrderRequest
	6,  // 13: aeromatch.Trading.GetOrderBook:input_type -> aeromatch.OrderBookRequest
	9,  // 14: aeromatch.Trading.MarketDataStream:input_type -> aeromatch.MarketDataRequest
	5,  // 15: aeromatch.Trading.SubmitOrder:output_type -> aeromatch.OrderResponse
	5,  // 16: aeromatch.Trading.SubmitOrderStream:output_type -> aeromatch.OrderResponse
	7,  // 17: aeromatch.Trading.GetOrderBook:output_type -> aeromatch.OrderBookResponse
	10, // 18: aeromatch.Trading.MarketDataStream:output_type -> aeromatch.MarketDataUpdate
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_grpc_order_proto_init() }
func file_api_grpc_order_proto_init() {
	if File_api_grpc_order_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_grpc_order_proto_rawDesc), len(file_api_grpc_order_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_grpc_order_proto_goTypes,
		DependencyIndexes: file_api_grpc_order_proto_depIdxs,
		EnumInfos:         file_api_grpc_order_proto_enumTypes,
		MessageInfos:      file_api_grpc_order_proto_msgTypes,
	}.Build()
	File_api_grpc_order_proto = out.File
	file_api_grpc_order_proto_goTypes = nil
	file_api_grpc_order_proto_depIdxs = nil
}
